name: Release

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: uns-release
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT }}

      - name: 'Extract current package version'
        run: node -p -e '`PACKAGE_VERSION=${"v" + require("./package.json").version}`' >> $GITHUB_ENV

      - uses: oprypin/find-latest-tag@v1
        with:
          repository: unstoppabledomains/uns
        id: latesttag

      - name: Print current package version
        run: echo "${{ env.PACKAGE_VERSION }}"
      - name: Print latest repository tag
        run: echo "${{ steps.latesttag.outputs.tag }}"

      - run: echo "No new version found... Skipping"
        if: steps.latesttag.outputs.tag == env.PACKAGE_VERSION

      - uses: actions/setup-node@v2
        if: steps.latesttag.outputs.tag != env.PACKAGE_VERSION
        with:
          node-version: 16.x

      - uses: actions/cache@v3
        id: cache
        if: steps.latesttag.outputs.tag != env.PACKAGE_VERSION
        with:
          path: '**/node_modules'
          key: uns-yarn-${{ hashFiles('**/yarn.lock') }}

      - run: yarn install
        if: steps.cache.outputs.cache-hit != 'true' && steps.latesttag.outputs.tag != env.PACKAGE_VERSION

      - run: yarn build:ci
        if: steps.latesttag.outputs.tag != env.PACKAGE_VERSION

      - uses: stefanzweifel/git-auto-commit-action@v4
        if: steps.latesttag.outputs.tag != env.PACKAGE_VERSION
        with:
          commit_message: Automatic release ${{ env.PACKAGE_VERSION }}
          commit_options: '--no-verify'
          file_pattern: 'artifacts/* dist/* sandbox/db.tgz uns-config.json'
          commit_user_name: UNS Release Bot
          commit_user_email: release@unstoppabledomains.com
          commit_author: UNS Release bot <release@unstoppabledomains.com>
          tagging_message: '${{ env.PACKAGE_VERSION }}'
          skip_dirty_check: false
