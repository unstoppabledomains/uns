"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserSmartAccount__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "InvalidShortString",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "str",
                type: "string",
            },
        ],
        name: "StringTooLong",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "uint256",
                name: "nonce",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                indexed: false,
                internalType: "struct ISmartAccount.Call[]",
                name: "calls",
                type: "tuple[]",
            },
        ],
        name: "BatchExecuted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "sender",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "to",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "value",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "bytes",
                name: "data",
                type: "bytes",
            },
        ],
        name: "CallExecuted",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "EIP712DomainChanged",
        type: "event",
    },
    {
        stateMutability: "payable",
        type: "fallback",
    },
    {
        inputs: [],
        name: "SMART_ACCOUNT_TYPEHASH",
        outputs: [
            {
                internalType: "bytes32",
                name: "",
                type: "bytes32",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "eip712Domain",
        outputs: [
            {
                internalType: "bytes1",
                name: "fields",
                type: "bytes1",
            },
            {
                internalType: "string",
                name: "name",
                type: "string",
            },
            {
                internalType: "string",
                name: "version",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "chainId",
                type: "uint256",
            },
            {
                internalType: "address",
                name: "verifyingContract",
                type: "address",
            },
            {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
            },
            {
                internalType: "uint256[]",
                name: "extensions",
                type: "uint256[]",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct ISmartAccount.Call[]",
                name: "calls",
                type: "tuple[]",
            },
        ],
        name: "encodeCalls",
        outputs: [
            {
                internalType: "bytes32",
                name: "encodedCalls",
                type: "bytes32",
            },
        ],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct ISmartAccount.Call[]",
                name: "calls",
                type: "tuple[]",
            },
        ],
        name: "execute",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct ISmartAccount.Call[]",
                name: "calls",
                type: "tuple[]",
            },
            {
                internalType: "uint256",
                name: "deadline",
                type: "uint256",
            },
            {
                components: [
                    {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8",
                    },
                    {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32",
                    },
                    {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32",
                    },
                ],
                internalType: "struct ISmartAccount.SplitSignature",
                name: "signature",
                type: "tuple",
            },
        ],
        name: "execute",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "nonce",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        stateMutability: "payable",
        type: "receive",
    },
];
const _bytecode = "0x61016060405234801562000011575f80fd5b506040518060400160405280601081526020017f55736572536d6172744163636f756e74000000000000000000000000000000008152506040518060400160405280600181526020017f3100000000000000000000000000000000000000000000000000000000000000815250620000935f836200014f60201b90919060201c565b6101208181525050620000b16001826200014f60201b90919060201c565b6101408181525050818051906020012060e08181525050808051906020012061010081815250504660a08181525050620000f0620001a460201b60201c565b608081815250503073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff1681525050505062000149672ac4f0cd44021ae760c01b6200020060201b60201c565b620004c4565b5f60208351101562000174576200016c836200020360201b60201c565b90506200019e565b8262000186836200026d60201b60201c565b5f01908162000196919062000341565b5060ff5f1b90505b92915050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60e051610100514630604051602001620001e595949392919062000416565b60405160208183030381529060405280519060200120905090565b50565b5f80829050601f815111156200025257826040517f305a27a90000000000000000000000000000000000000000000000000000000081526004016200024991906200044a565b60405180910390fd5b80518162000260906200049b565b5f1c175f1b915050919050565b5f819050919050565b634e487b7160e01b5f52604160045260245ffd5b5f8160011c90506001821680620002a257607f821691505b602082108103620002c157634e487b7160e01b5f52602260045260245ffd5b50919050565b805f52505f60205f20905090565b601f8211156200032457805f5260205f20601f840160051c81016020851015620002fd578190505b601f840160051c820191505b8181101562000321575f815560018101905062000309565b50505b505050565b5f8260011b5f198460031b1c19831617905092915050565b815160018060401b038111156200035d576200035c62000276565b5b62000375816200036e84546200028a565b84620002d5565b5f6020809150601f831160018114620003ac575f841562000397578387015190505b620003a3858262000329565b8655506200040e565b601f198416620003bc86620002c7565b5f5b82811015620003e35785890151825560018201915084860195508481019050620003be565b50858210156200040257848801515f1960f88860031b161c1981168255505b505060018460011b0185555b505050505050565b5f60a08201905086825285602083015284604083015283606083015260018060a01b03831660808301529695505050505050565b5f602080835283518060208501525f5b818110156200047b578281870101516040828701015282810190506200045a565b505f604082860101526040601f19601f8301168501019250505092915050565b5f8151602083015191506020811015620004be575f198160200360031b1b821691505b50919050565b60805160a05160c05160e051610100516101205161014051611947620005165f395f61032f01525f6102fb01525f61112901525f61110801525f610d6601525f610dbc01525f610de501526119475ff3fe608060405260043610610058575f3560e01c80633f707e6b1461007557806370ecec441461009157806384b0196e146100bb5780639b2bd7f9146100eb578063affed0e014610127578063b0b6d716146101515761005f565b3661005f57005b61007367cfdb3593f5cc43c660c01b61016d565b005b61008f600480360381019061008a91906111c2565b610170565b005b34801561009c575f80fd5b506100a56102c8565b6040516100b29190611206565b60405180910390f35b3480156100c6575f80fd5b506100cf6102ec565b6040516100e2979695949392919061125f565b60405180910390f35b3480156100f6575f80fd5b50610111600480360381019061010c91906111c2565b6103e8565b60405161011e9190611206565b60405180910390f35b348015610132575f80fd5b5061013b61051a565b60405161014891906112fe565b60405180910390f35b61016b6004803603810190610166919061130e565b610588565b005b50565b61018467bee55c6b604e1e9e60c01b61016d565b61019867b546242bf6b87f8c60c01b61016d565b6101ac67084901046aa32c9960c01b61016d565b6101c0670f7076b40eae10fe60c01b61016d565b6101d4673fe9d0c8bb1e1d3460c01b61016d565b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610242576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023990611376565b60405180910390fd5b6102566778e2730c53a698b760c01b61016d565b61026a6743ede8c08037ac9d60c01b61016d565b61027e67283b4bdfb6b9bb9c60c01b61016d565b610292679c6a57b8934d8dc560c01b61016d565b6102a66730eecdbf2ee196bb60c01b61016d565b6102ba67f3be40ec682cd93d60c01b61016d565b6102c48282610806565b5050565b7f0833d20926eeef7c1ae2a08b76639e026bf0059a10732018b6b7c4387838e37f81565b5f6060805f805f60606103285f7f000000000000000000000000000000000000000000000000000000000000000061097c90919063ffffffff16565b61035c60017f000000000000000000000000000000000000000000000000000000000000000061097c90919063ffffffff16565b46305f801b5f67ffffffffffffffff81111561037b5761037a6113d9565b5b6040519080825280602002602001820160405280156103a95781602001602082028036833780820191505090505b507f0f00000000000000000000000000000000000000000000000000000000000000959493929190965096509650965096509650965090919293949596565b5f6103fd673f5dcd69b83a6f8860c01b61016d565b610411677675d7da8bd43a0a60c01b61016d565b61042567f3edc6973264a87660c01b61016d565b5f5b8383905081101561051357610446674ccc839995df27d060c01b61016d565b8184848381811061045a576104596113ed565b5b905060200281019061046c9190611401565b5f01602081019061047d919061143e565b8585848181106104905761048f6113ed565b5b90506020028101906104a29190611401565b602001358686858181106104b9576104b86113ed565b5b90506020028101906104cb9190611401565b80604001906104da919061145f565b6040516020016104ee9594939291906114ad565b6040516020818303038152906040528051906020012091508080600101915050610427565b5092915050565b5f61052f6788cd061f4dfbef9b60c01b61016d565b610543676f374d6c988b5b9260c01b61016d565b610557677d7a73b5795d0a1b60c01b61016d565b6105807f63375c7ff2696e4243f9e586731b1d394b267a382914868acda084c4d3cf7daa610a29565b5f0154905090565b61059c6749e4f59d2699b34560c01b61016d565b6105b0678955ba78f02be0d560c01b61016d565b6105c467c7574f68240477f460c01b61016d565b6105d867a3f8b7509d13213660c01b61016d565b81421061061a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610611906114ed565b60405180910390fd5b61062e679fb06534d5afdba560c01b61016d565b61064267e2f111b32e14c2c960c01b61016d565b61065667fb4e01c65269df9e60c01b61016d565b5f6106bc7f0833d20926eeef7c1ae2a08b76639e026bf0059a10732018b6b7c4387838e37f61068361051a565b61068d88886103e8565b866040516020016106a19493929190611550565b60405160208183030381529060405280519060200120610a32565b90506106d267d9ef46722981f11b60c01b61016d565b6106e6676a6a2bf5a433f80360c01b61016d565b5f61070c82845f0160208101906106fd9190611575565b85602001358660400135610a4b565b90506107226797a81c64dcf4f73660c01b61016d565b61073667172e1c7afd736dc360c01b61016d565b61074a6783208ef34a6de8b560c01b61016d565b3073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107af9061159f565b60405180910390fd5b6107cc67b8f2701b4be0118660c01b61016d565b6107e067e0d86d33f692e14360c01b61016d565b6107f46752a879b96a55d37f60c01b61016d565b6107fe8686610806565b505050505050565b61081a67a69c026b2152872f60c01b61016d565b61082e674decc3e303008fe860c01b61016d565b610842672f96e928278db68060c01b61016d565b5f61084b61051a565b905061086167c374c4a4e33441d960c01b61016d565b61087567bf6da20a292044f060c01b61016d565b61087d610a74565b61089167fb291e84d960cf1f60c01b61016d565b6108a5677610aedd529bbb0060c01b61016d565b5f5b83839050811015610914576108c66750547d2add2ff06260c01b61016d565b6108da67655798c6c42a5a3260c01b61016d565b6109078484838181106108f0576108ef6113ed565b5b90506020028101906109029190611401565b610ade565b80806001019150506108a7565b50610929670c626e0967c63f8f60c01b61016d565b61093d67566fd7589d78b95360c01b61016d565b807f280bb3599696acbf79fb8ffcde81a57337b52500f789600fbb1cff9b4cbaba39848460405161096f92919061162b565b60405180910390a2505050565b606060ff5f1b83146109985761099183610cf1565b9050610a23565b8180546109a490611714565b80601f01602080910402602001604051908101604052809291908181526020018280546109d090611714565b8015610a1b5780601f106109f257610100808354040283529160200191610a1b565b820191905f5260205f20905b8154815290600101906020018083116109fe57829003601f168201915b505050505090505b92915050565b5f819050919050565b5f610a44610a3e610d63565b83610e19565b9050919050565b5f805f610a5a87878787610e59565b91509150610a6781610f31565b8192505050949350505050565b610a8867fdf483df6aef853a60c01b61016d565b610a9c67db67b9f7c1e6791260c01b61016d565b610ac57f63375c7ff2696e4243f9e586731b1d394b267a382914868acda084c4d3cf7daa610a29565b5f015f815480929190610ad79061174f565b9190505550565b610af267f504f8606fecc01560c01b61016d565b610b0667faa0dd9eb5d7a9cf60c01b61016d565b610b1a676d957b192cb7becf60c01b61016d565b5f815f016020810190610b2d919061143e565b73ffffffffffffffffffffffffffffffffffffffff168260200135838060400190610b58919061145f565b604051610b66929190611777565b5f6040518083038185875af1925050503d805f8114610ba0576040519150601f19603f3d011682016040523d82523d5f602084013e610ba5565b606091505b50509050610bbd6791cbec07aebf68ac60c01b61016d565b610bd167a8e2d26fccbf92e060c01b61016d565b610be5674b2d0f03d40034b060c01b61016d565b80610c25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1c9061178d565b60405180910390fd5b610c39675792d93f2dde44ed60c01b61016d565b610c4d6750926efd93f0728060c01b61016d565b610c6167a0b926b7313ed96760c01b61016d565b815f016020810190610c73919061143e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fed7e8f919df9cc0d0ad8b4057d084ebf319b630564d5da283e14751adc931f3a8460200135858060400190610cd6919061145f565b604051610ce5939291906117ca565b60405180910390a35050565b60605f610cfd83611096565b90505f602067ffffffffffffffff811115610d1b57610d1a6113d9565b5b6040519080825280601f01601f191660200182016040528015610d4d5781602001600182028036833780820191505090505b5090508181528360208201528092505050919050565b5f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148015610dde57507f000000000000000000000000000000000000000000000000000000000000000046145b15610e0b577f00000000000000000000000000000000000000000000000000000000000000009050610e16565b610e136110e4565b90505b90565b5f6040517f190100000000000000000000000000000000000000000000000000000000000081528360028201528260228201526042812091505092915050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0835f1c1115610e91575f600391509150610f28565b5f6001878787876040515f8152602001604052604051610eb494939291906117ed565b6020604051602081039080840390855afa158015610ed4573d5f803e3d5ffd5b5050506020604051035190505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f20575f60019250925050610f28565b805f92509250505b94509492505050565b5f6004811115610f4457610f43611815565b5b816004811115610f5757610f56611815565b5b03156110935760016004811115610f7157610f70611815565b5b816004811115610f8457610f83611815565b5b03610fc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbb90611829565b60405180910390fd5b60026004811115610fd857610fd7611815565b5b816004811115610feb57610fea611815565b5b0361102b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102290611866565b60405180910390fd5b6003600481111561103f5761103e611815565b5b81600481111561105257611051611815565b5b03611092576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611089906118a3565b60405180910390fd5b5b50565b5f8060ff835f1c169050601f8111156110db576040517fb3512b0c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80915050919050565b5f7f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000463060405160200161115e959493929190611906565b60405160208183030381529060405280519060200120905090565b5f8083601f840112611189575f80fd5b8235905067ffffffffffffffff8111156111a1575f80fd5b6020830191508360208260051b85010111156111bb575f80fd5b9250929050565b5f80602083850312156111d3575f80fd5b823567ffffffffffffffff8111156111e9575f80fd5b6111f585828601611179565b915080935050809150509250929050565b5f60208201905082825292915050565b5f81518084525f5b818110156112405760208082860101518183880101525060208101905061121e565b505f602082860101526020601f19601f83011685010191505092915050565b60ff60f81b881681525f602060e0602084015261127f60e084018a611216565b8381036040850152611291818a611216565b905087606085015260018060a01b03871660808501528560a085015283810360c08501528085518083526020830191506020870192505f5b818110156112ea5783518352848301925084840193506001810190506112c9565b505080935050505098975050505050505050565b5f60208201905082825292915050565b5f805f8084860360a0811215611322575f80fd5b853567ffffffffffffffff811115611338575f80fd5b61134488828901611179565b91508096505080945050602086013592506060603f1982011215611366575f80fd5b5060408501905092959194509250565b60208152602360208201527f55736572536d6172744163636f756e743a20496e76616c696420617574686f7260408201527f697479000000000000000000000000000000000000000000000000000000000060608201525f608082019050919050565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b5f8235605e19833603018112611415575f80fd5b80830191505092915050565b5f8135905060018060a01b0381168114611439575f80fd5b919050565b5f6020828403121561144e575f80fd5b61145782611421565b905092915050565b5f808335601e19843603018112611474575f80fd5b80840190508035915067ffffffffffffffff821115611491575f80fd5b602081019250508036038213156114a6575f80fd5b9250929050565b8581526bffffffffffffffffffffffff198560601b166020820152836034820152818360548301375f6054838301015f8152809150509695505050505050565b60208152602260208201527f55736572536d6172744163636f756e743a20446561646c696e6520657870697260408201527f656400000000000000000000000000000000000000000000000000000000000060608201525f608082019050919050565b5f60808201905085825284602083015283604083015282606083015295945050505050565b5f60208284031215611585575f80fd5b813560ff81168114611595575f80fd5b8091505092915050565b60208152602360208201527f55736572536d6172744163636f756e743a20496e76616c6964207369676e617460408201527f757265000000000000000000000000000000000000000000000000000000000060608201525f608082019050919050565b81835281816020850137505f602082840101525f6020601f19601f840116840101905092915050565b5f6020808301818452808582526040915060408501905060408660051b860101875f5b8881101561170457603f198884030184528135605e198b3603018112611672575f80fd5b8a81019050606060018060a01b0361168983611421565b168552878201358886015286820135601e198336030181126116a9575f80fd5b8281019250508135888301925067ffffffffffffffff8111156116ca575f80fd5b8036038313156116d8575f80fd5b81888701526116ea8287018285611602565b95505050508582019150858401935060018101905061164e565b5050809450505050509392505050565b5f8160011c9050600182168061172b57607f821691505b60208210810361174957634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8019820361176c57634e487b7160e01b5f52601160045260245ffd5b600182019050919050565b818382375f8282015f8152809150509392505050565b60208152600d60208201527f43616c6c2072657665727465640000000000000000000000000000000000000060408201525f606082019050919050565b838152604060208201525f6117e3604083018486611602565b9050949350505050565b5f60808201905085825260ff8516602083015283604083015282606083015295945050505050565b634e487b7160e01b5f52602160045260245ffd5b60208152601860208201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060408201525f606082019050919050565b60208152601f60208201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060408201525f606082019050919050565b60208152602260208201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c60408201527f756500000000000000000000000000000000000000000000000000000000000060608201525f608082019050919050565b5f60a08201905086825285602083015284604083015283606083015260018060a01b0383166080830152969550505050505056fea164736f6c6343000818000a";
const isSuperArgs = (xs) => xs.length > 1;
class UserSmartAccount__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.UserSmartAccount__factory = UserSmartAccount__factory;
UserSmartAccount__factory.bytecode = _bytecode;
UserSmartAccount__factory.abi = _abi;
