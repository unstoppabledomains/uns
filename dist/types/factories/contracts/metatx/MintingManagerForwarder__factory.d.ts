import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { MintingManagerForwarder, MintingManagerForwarderInterface } from "../../../contracts/metatx/MintingManagerForwarder";
declare type MintingManagerForwarderConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MintingManagerForwarder__factory extends ContractFactory {
    constructor(...args: MintingManagerForwarderConstructorParams);
    getDeployTransaction(mintingManager: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(mintingManager: AddressLike, overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<MintingManagerForwarder & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): MintingManagerForwarder__factory;
    static readonly bytecode = "0x608060405234801561000f575f80fd5b50604051610b82380380610b8283398101604081905261002e91610052565b5f80546001600160a01b0319166001600160a01b039290921691909117905561007f565b5f60208284031215610062575f80fd5b81516001600160a01b0381168114610078575f80fd5b9392505050565b610af68061008c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c80631bf7e13e146100435780636ccbae5f1461006c578063a424740014610099575b5f80fd5b610056610051366004610749565b6100bc565b604051610063919061082c565b60405180910390f35b61008b61007a36600461083e565b5f9081526001602052604090205490565b604051908152602001610063565b6100ac6100a7366004610749565b6101d6565b6040519015158152602001610063565b60605f5a90506100cd8585856101d6565b6101315760405162461bcd60e51b815260206004820152602a60248201527f4d696e74696e674d616e61676572466f727761726465723a205349474e415455604482015269149157d253959053125160b21b60648201526084015b60405180910390fd5b6101cb6101416020870187610870565b5f546001600160a01b031660408801358461015f60608b018b610889565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b90819084018382808284375f9201919091525061023292505050565b9150505b9392505050565b5f61022a6101e38561093a565b5f54604080516020601f88018190048102820181019092528681526001600160a01b03909216919087908790819084018382808284375f9201919091525061030e92505050565b949350505050565b606061023d85610453565b5f80876001600160a01b0316866102568b8a898961047e565b60405161026391906109f5565b5f604051808303815f8787f1925050503d805f811461029d576040519150601f19603f3d011682016040523d82523d5f602084013e6102a2565b606091505b5090925090506102b3603f87610a10565b5a116102c1576102c1610a2f565b61030182826040518060400160405280601a81526020017f42617365466f727761726465723a2043414c4c5f4641494c45440000000000008152506104ae565b9998505050505050505050565b6040838101519051636ccbae5f60e01b815260048101919091525f9081903090636ccbae5f90602401602060405180830381865afa158015610352573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906103769190610a43565b90505f6104238660600151805190602001208688602001516040516020016103c39392919092835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b60408051601f1981840301815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000084830152603c8085019190915282518085039091018152605c909301909152815191012090565b905081866020015114801561044957508551610449906001600160a01b031682866104e7565b9695505050505050565b5f8181526001602081905260409091205461046d91610a5a565b5f9182526001602052604090912055565b606082858560405160200161049593929190610a7f565b6040516020818303038152906040529050949350505050565b606083156104bd5750816101cf565b8251156104cd5782518084602001fd5b8160405162461bcd60e51b8152600401610128919061082c565b5f805f6104f48585610622565b90925090505f81600481111561050c5761050c610abd565b14801561052a5750856001600160a01b0316826001600160a01b0316145b1561053a576001925050506101cf565b5f80876001600160a01b0316631626ba7e60e01b8888604051602401610561929190610ad1565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b031990941693909317909252905161059f91906109f5565b5f60405180830381855afa9150503d805f81146105d7576040519150601f19603f3d011682016040523d82523d5f602084013e6105dc565b606091505b50915091508180156105ef575080516020145b801561061657508051630b135d3f60e11b906106149083016020908101908401610a43565b145b98975050505050505050565b5f808251604103610656576020830151604084015160608501515f1a61064a87828585610664565b9450945050505061065d565b505f905060025b9250929050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561069957505f90506003610740565b8460ff16601b141580156106b157508460ff16601c14155b156106c157505f90506004610740565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610712573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b03811661073a575f60019250925050610740565b91505f90505b94509492505050565b5f805f6040848603121561075b575f80fd5b833567ffffffffffffffff80821115610772575f80fd5b9085019060808288031215610785575f80fd5b9093506020850135908082111561079a575f80fd5b818601915086601f8301126107ad575f80fd5b8135818111156107bb575f80fd5b8760208285010111156107cc575f80fd5b6020830194508093505050509250925092565b5f5b838110156107f95781810151838201526020016107e1565b50505f910152565b5f81518084526108188160208601602086016107df565b601f01601f19169290920160200192915050565b602081525f6101cf6020830184610801565b5f6020828403121561084e575f80fd5b5035919050565b80356001600160a01b038116811461086b575f80fd5b919050565b5f60208284031215610880575f80fd5b6101cf82610855565b5f808335601e1984360301811261089e575f80fd5b83018035915067ffffffffffffffff8211156108b8575f80fd5b60200191503681900382131561065d575f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040516080810167ffffffffffffffff81118282101715610903576109036108cc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610932576109326108cc565b604052919050565b5f6080823603121561094a575f80fd5b6109526108e0565b61095b83610855565b81526020808401358183015260408401356040830152606084013567ffffffffffffffff8082111561098b575f80fd5b9085019036601f83011261099d575f80fd5b8135818111156109af576109af6108cc565b6109c1601f8201601f19168501610909565b915080825236848285010111156109d6575f80fd5b80848401858401375f9082019093019290925250606082015292915050565b5f8251610a068184602087016107df565b9190910192915050565b5f82610a2a57634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52600160045260245ffd5b5f60208284031215610a53575f80fd5b5051919050565b80820180821115610a7957634e487b7160e01b5f52601160045260245ffd5b92915050565b5f8451610a908184602089016107df565b60609490941b6bffffffffffffffffffffffff191691909301908152601481019190915260340192915050565b634e487b7160e01b5f52602160045260245ffd5b828152604060208201525f61022a604083018461080156fea164736f6c6343000818000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "mintingManager";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "tokenId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IForwarder.ForwardRequest";
            readonly name: "req";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly name: "execute";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "tokenId";
            readonly type: "uint256";
        }];
        readonly name: "nonceOf";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "address";
                readonly name: "from";
                readonly type: "address";
            }, {
                readonly internalType: "uint256";
                readonly name: "nonce";
                readonly type: "uint256";
            }, {
                readonly internalType: "uint256";
                readonly name: "tokenId";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes";
                readonly name: "data";
                readonly type: "bytes";
            }];
            readonly internalType: "struct IForwarder.ForwardRequest";
            readonly name: "req";
            readonly type: "tuple";
        }, {
            readonly internalType: "bytes";
            readonly name: "signature";
            readonly type: "bytes";
        }];
        readonly name: "verify";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): MintingManagerForwarderInterface;
    static connect(address: string, runner?: ContractRunner | null): MintingManagerForwarder;
}
export {};
//# sourceMappingURL=MintingManagerForwarder__factory.d.ts.map