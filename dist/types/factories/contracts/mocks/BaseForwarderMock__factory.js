"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseForwarderMock__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct IForwarder.ForwardRequest",
                name: "req",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "execute",
        outputs: [
            {
                internalType: "bytes",
                name: "",
                type: "bytes",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "addr",
                type: "address",
            },
        ],
        name: "hasAsset",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "mintAsset",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "tokenId",
                type: "uint256",
            },
        ],
        name: "nonceOf",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "revertWithReason",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [],
        name: "revertWithoutReason",
        outputs: [],
        stateMutability: "pure",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "from",
                        type: "address",
                    },
                    {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256",
                    },
                    {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                ],
                internalType: "struct IForwarder.ForwardRequest",
                name: "req",
                type: "tuple",
            },
            {
                internalType: "bytes",
                name: "signature",
                type: "bytes",
            },
        ],
        name: "verify",
        outputs: [
            {
                internalType: "bool",
                name: "",
                type: "bool",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x608060405234801561000f575f80fd5b50610bd88061001d5f395ff3fe608060405234801561000f575f80fd5b506004361061007a575f3560e01c80636ccbae5f116100585780636ccbae5f146100b8578063716ac80f146100e5578063a4247400146100ed578063a567fb4714610110575f80fd5b80631bf7e13e1461007e5780634167168d146100a75780635b2dd100146100b0575b5f80fd5b61009161008c36600461082b565b61013b565b60405161009e919061090e565b60405180910390f35b6100ae5f80fd5b005b6100ae610244565b6100d76100c6366004610920565b5f9081526020819052604090205490565b60405190815260200161009e565b6100ae610275565b6101006100fb36600461082b565b6102aa565b604051901515815260200161009e565b61010061011e366004610952565b6001600160a01b03165f9081526001602052604090205460ff1690565b60605f5a905061014c8585856102aa565b6101a95760405162461bcd60e51b8152602060048201526024808201527f42617365466f727761726465724d6f636b3a205349474e41545552455f494e566044820152631053125160e21b60648201526084015b60405180910390fd5b6102396101b96020870187610952565b306040880135846101cd60608b018b61096b565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525050604080516020601f8e018190048102820181019092528c815292508c91508b90819084018382808284375f920191909152506102fb92505050565b9150505b9392505050565b60405162461bcd60e51b815260206004820152600660248201526541414141414160d01b60448201526064016101a0565b6001805f6102816103d7565b6001600160a01b0316815260208101919091526040015f20805460ff1916911515919091179055565b5f6102f36102b785610a1c565b3085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506103f192505050565b949350505050565b606061030685610536565b5f80876001600160a01b03168661031f8b8a8989610560565b60405161032c9190610ad7565b5f604051808303815f8787f1925050503d805f8114610366576040519150601f19603f3d011682016040523d82523d5f602084013e61036b565b606091505b50909250905061037c603f87610af2565b5a1161038a5761038a610b11565b6103ca82826040518060400160405280601a81526020017f42617365466f727761726465723a2043414c4c5f4641494c4544000000000000815250610590565b9998505050505050505050565b5f3033036103ec575060331936013560601c90565b503390565b6040838101519051636ccbae5f60e01b815260048101919091525f9081903090636ccbae5f90602401602060405180830381865afa158015610435573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104599190610b25565b90505f6105068660600151805190602001208688602001516040516020016104a69392919092835260609190911b6bffffffffffffffffffffffff19166020830152603482015260540190565b60408051601f1981840301815282825280516020918201207f19457468657265756d205369676e6564204d6573736167653a0a33320000000084830152603c8085019190915282518085039091018152605c909301909152815191012090565b905081866020015114801561052c5750855161052c906001600160a01b031682866105c9565b9695505050505050565b5f8181526020819052604090205461054f906001610b3c565b5f9182526020829052604090912055565b606082858560405160200161057793929190610b61565b6040516020818303038152906040529050949350505050565b6060831561059f57508161023d565b8251156105af5782518084602001fd5b8160405162461bcd60e51b81526004016101a0919061090e565b5f805f6105d68585610704565b90925090505f8160048111156105ee576105ee610b9f565b14801561060c5750856001600160a01b0316826001600160a01b0316145b1561061c5760019250505061023d565b5f80876001600160a01b0316631626ba7e60e01b8888604051602401610643929190610bb3565b60408051601f198184030181529181526020820180516001600160e01b03166001600160e01b03199094169390931790925290516106819190610ad7565b5f60405180830381855afa9150503d805f81146106b9576040519150601f19603f3d011682016040523d82523d5f602084013e6106be565b606091505b50915091508180156106d1575080516020145b80156106f857508051630b135d3f60e11b906106f69083016020908101908401610b25565b145b98975050505050505050565b5f808251604103610738576020830151604084015160608501515f1a61072c87828585610746565b9450945050505061073f565b505f905060025b9250929050565b5f807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561077b57505f90506003610822565b8460ff16601b1415801561079357508460ff16601c14155b156107a357505f90506004610822565b604080515f8082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156107f4573d5f803e3d5ffd5b5050604051601f1901519150506001600160a01b03811661081c575f60019250925050610822565b91505f90505b94509492505050565b5f805f6040848603121561083d575f80fd5b833567ffffffffffffffff80821115610854575f80fd5b9085019060808288031215610867575f80fd5b9093506020850135908082111561087c575f80fd5b818601915086601f83011261088f575f80fd5b81358181111561089d575f80fd5b8760208285010111156108ae575f80fd5b6020830194508093505050509250925092565b5f5b838110156108db5781810151838201526020016108c3565b50505f910152565b5f81518084526108fa8160208601602086016108c1565b601f01601f19169290920160200192915050565b602081525f61023d60208301846108e3565b5f60208284031215610930575f80fd5b5035919050565b80356001600160a01b038116811461094d575f80fd5b919050565b5f60208284031215610962575f80fd5b61023d82610937565b5f808335601e19843603018112610980575f80fd5b83018035915067ffffffffffffffff82111561099a575f80fd5b60200191503681900382131561073f575f80fd5b634e487b7160e01b5f52604160045260245ffd5b6040516080810167ffffffffffffffff811182821017156109e5576109e56109ae565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a1457610a146109ae565b604052919050565b5f60808236031215610a2c575f80fd5b610a346109c2565b610a3d83610937565b81526020808401358183015260408401356040830152606084013567ffffffffffffffff80821115610a6d575f80fd5b9085019036601f830112610a7f575f80fd5b813581811115610a9157610a916109ae565b610aa3601f8201601f191685016109eb565b91508082523684828501011115610ab8575f80fd5b80848401858401375f9082019093019290925250606082015292915050565b5f8251610ae88184602087016108c1565b9190910192915050565b5f82610b0c57634e487b7160e01b5f52601260045260245ffd5b500490565b634e487b7160e01b5f52600160045260245ffd5b5f60208284031215610b35575f80fd5b5051919050565b80820180821115610b5b57634e487b7160e01b5f52601160045260245ffd5b92915050565b5f8451610b728184602089016108c1565b60609490941b6bffffffffffffffffffffffff191691909301908152601481019190915260340192915050565b634e487b7160e01b5f52602160045260245ffd5b828152604060208201525f6102f360408301846108e356fea164736f6c6343000818000a";
const isSuperArgs = (xs) => xs.length > 1;
class BaseForwarderMock__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    connect(runner) {
        return super.connect(runner);
    }
    static createInterface() {
        return new ethers_1.Interface(_abi);
    }
    static connect(address, runner) {
        return new ethers_1.Contract(address, _abi, runner);
    }
}
exports.BaseForwarderMock__factory = BaseForwarderMock__factory;
BaseForwarderMock__factory.bytecode = _bytecode;
BaseForwarderMock__factory.abi = _abi;
