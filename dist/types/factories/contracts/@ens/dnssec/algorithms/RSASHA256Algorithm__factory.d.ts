import { ContractFactory, ContractTransactionResponse } from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type { RSASHA256Algorithm, RSASHA256AlgorithmInterface } from "../../../../../contracts/@ens/dnssec/algorithms/RSASHA256Algorithm";
declare type RSASHA256AlgorithmConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class RSASHA256Algorithm__factory extends ContractFactory {
    constructor(...args: RSASHA256AlgorithmConstructorParams);
    getDeployTransaction(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<ContractDeployTransaction>;
    deploy(overrides?: NonPayableOverrides & {
        from?: string;
    }): Promise<RSASHA256Algorithm & {
        deploymentTransaction(): ContractTransactionResponse;
    }>;
    connect(runner: ContractRunner | null): RSASHA256Algorithm__factory;
    static readonly bytecode = "0x608060405234801561000f575f80fd5b506106ce8061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063de8f50a11461002d575b5f80fd5b61004061003b36600461051c565b610054565b604051901515815260200160405180910390f35b5f6060805f61009c60048b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525092939250506102e79050565b60ff1690508015610166576100f060058261ffff168c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525092949392505061030b9050565b925061015f6101008260056105c3565b61ffff908116906005906101169085168d6105e5565b61012091906105e5565b8c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525092949392505061030b9050565b915061021d565b6101a960058b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250929392505061038b9050565b90506101f460078261ffff168c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f9201919091525092949392505061030b9050565b925061021a6102048260076105c3565b61ffff908116906007906101169085168d6105e5565b91505b5f606061026084868a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f920191909152506103b192505050565b90925090508180156102d757506102856020825161027e91906105e5565b82906103cb565b60028b8b6040516102979291906105f8565b602060405180830381855afa1580156102b2573d5f803e3d5ffd5b5050506040513d601f19601f820116820180604052508101906102d59190610607565b145b9c9b505050505050505050505050565b5f8282815181106102fa576102fa61061e565b016020015160f81c90505b92915050565b825160609061031a8385610632565b1115610324575f80fd5b5f8267ffffffffffffffff81111561033e5761033e610645565b6040519080825280601f01601f191660200182016040528015610368576020820181803683370190505b509050602080820190868601016103808282876103ed565b509095945050505050565b81515f9061039a836002610632565b11156103a4575f80fd5b50016002015161ffff1690565b5f60606103bf838587610442565b91509150935093915050565b81515f906103da836020610632565b11156103e4575f80fd5b50016020015190565b602081106104255781518352610404602084610632565b9250610411602083610632565b915061041e6020826105e5565b90506103ed565b905182516020929092036101000a5f190180199091169116179052565b5f60605f85518551855188888860405160200161046496959493929190610686565b6040516020818303038152906040529050835167ffffffffffffffff81111561048f5761048f610645565b6040519080825280601f01601f1916602001820160405280156104b9576020820181803683370190505b50915083516020830182516020840160055afa925050935093915050565b5f8083601f8401126104e7575f80fd5b50813567ffffffffffffffff8111156104fe575f80fd5b602083019150836020828501011115610515575f80fd5b9250929050565b5f805f805f8060608789031215610531575f80fd5b863567ffffffffffffffff80821115610548575f80fd5b6105548a838b016104d7565b9098509650602089013591508082111561056c575f80fd5b6105788a838b016104d7565b90965094506040890135915080821115610590575f80fd5b5061059d89828a016104d7565b979a9699509497509295939492505050565b634e487b7160e01b5f52601160045260245ffd5b61ffff8181168382160190808211156105de576105de6105af565b5092915050565b81810381811115610305576103056105af565b818382375f9101908152919050565b5f60208284031215610617575f80fd5b5051919050565b634e487b7160e01b5f52603260045260245ffd5b80820180821115610305576103056105af565b634e487b7160e01b5f52604160045260245ffd5b5f81515f5b81811015610678576020818501810151868301520161065e565b505f93019283525090919050565b8681528560208201528460408201525f6106b56106af6106a96060850188610659565b86610659565b84610659565b9897505050505050505056fea164736f6c6343000818000a";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "key";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "sig";
            readonly type: "bytes";
        }];
        readonly name: "verify";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): RSASHA256AlgorithmInterface;
    static connect(address: string, runner?: ContractRunner | null): RSASHA256Algorithm;
}
export {};
//# sourceMappingURL=RSASHA256Algorithm__factory.d.ts.map